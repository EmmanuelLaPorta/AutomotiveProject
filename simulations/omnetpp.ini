[General]
network = AutomotiveTDMANetwork
sim-time-limit = 1s
cmdenv-express-mode = true
cmdenv-autoflush = true

# ============================================================================
# CONFIGURAZIONE STATISTICHE
# ============================================================================
**.scalar-recording = true
**.vector-recording = true
**.E2EDelay.statistic-recording = true
**.E2EBurstDelay.statistic-recording = true

# ============================================================================
# FLOW 1: LD1 → CU (LiDAR frontale, critico ADAS)
# Periodo: 1.4ms, Payload: 1300B
# ============================================================================
**.LD1.numSenders = 1
**.LD1.numReceivers = 0
**.LD1.senderApp[0].name = "flow1_LD1_to_CU"
**.LD1.senderApp[0].period = 0.0014s
**.LD1.senderApp[0].tdmaOffset = 0s
**.LD1.senderApp[0].payloadSize = 1300B
**.LD1.senderApp[0].burstSize = 1
**.LD1.senderApp[0].destAddr = "00:00:00:00:00:07"  # CU
**.LD1.senderApp[0].srcAddr = "00:00:00:00:00:03"   # LD1

# CU riceve da LD1
**.CU.receiverApp[0].name = "flow1_LD1_to_CU"

# ============================================================================
# FLOW 1b: LD2 → CU (LiDAR frontale 2, critico ADAS)
# Periodo: 1.4ms, Payload: 1300B
# ============================================================================
**.LD2.numSenders = 1
**.LD2.numReceivers = 0
**.LD2.senderApp[0].name = "flow1b_LD2_to_CU"
**.LD2.senderApp[0].period = 0.0014s
**.LD2.senderApp[0].tdmaOffset = 0.00002s  # Offset 20us dopo LD1
**.LD2.senderApp[0].payloadSize = 1300B
**.LD2.senderApp[0].burstSize = 1
**.LD2.senderApp[0].destAddr = "00:00:00:00:00:07"  # CU
**.LD2.senderApp[0].srcAddr = "00:00:00:00:00:0A"   # LD2

# CU riceve da LD2
**.CU.receiverApp[1].name = "flow1b_LD2_to_CU"

# ============================================================================
# FLOW 2: ME → S1, S2, S3, S4 (Audio speaker, soft real-time)
# Periodo: 250us, Payload: 80B
# MULTICAST: 4 destinazioni, uso 4 sender app
# ============================================================================
**.ME.numReceivers = 0

# ME → S1
**.ME.senderApp[0].name = "flow2_ME_to_S1"
**.ME.senderApp[0].period = 0.00025s
**.ME.senderApp[0].tdmaOffset = 0.00004s
**.ME.senderApp[0].payloadSize = 80B
**.ME.senderApp[0].burstSize = 1
**.ME.senderApp[0].destAddr = "00:00:00:00:00:05"  # S1
**.ME.senderApp[0].srcAddr = "00:00:00:00:00:0B"   # ME

# ME → S2
**.ME.senderApp[1].name = "flow2_ME_to_S2"
**.ME.senderApp[1].period = 0.00025s
**.ME.senderApp[1].tdmaOffset = 0.00005s
**.ME.senderApp[1].payloadSize = 80B
**.ME.senderApp[1].burstSize = 1
**.ME.senderApp[1].destAddr = "00:00:00:00:00:08"  # S2
**.ME.senderApp[1].srcAddr = "00:00:00:00:00:0B"   # ME

# ME → S3
**.ME.senderApp[2].name = "flow2_ME_to_S3"
**.ME.senderApp[2].period = 0.00025s
**.ME.senderApp[2].tdmaOffset = 0.00006s
**.ME.senderApp[2].payloadSize = 80B
**.ME.senderApp[2].burstSize = 1
**.ME.senderApp[2].destAddr = "00:00:00:00:00:0D"  # S3
**.ME.senderApp[2].srcAddr = "00:00:00:00:00:0B"   # ME

# ME → S4
**.ME.senderApp[3].name = "flow2_ME_to_S4"
**.ME.senderApp[3].period = 0.00025s
**.ME.senderApp[3].tdmaOffset = 0.00007s
**.ME.senderApp[3].payloadSize = 80B
**.ME.senderApp[3].burstSize = 1
**.ME.senderApp[3].destAddr = "00:00:00:00:00:11"  # S4
**.ME.senderApp[3].srcAddr = "00:00:00:00:00:0B"   # ME

# Speaker receivers
**.S1.numReceivers = 1
**.S1.receiverApp[0].name = "flow2_ME_to_S1"
**.S2.numReceivers = 1
**.S2.receiverApp[0].name = "flow2_ME_to_S2"
**.S3.numReceivers = 1
**.S3.receiverApp[0].name = "flow2_ME_to_S3"
**.S4.numReceivers = 1
**.S4.receiverApp[0].name = "flow2_ME_to_S4"

# ============================================================================
# FLOW 3: USS1, USS2, USS3, USS4 → CU (Sensori ultrasuoni parcheggio)
# Periodo: 100ms, Payload: 188B
# ============================================================================
**.USS1.numSenders = 1
**.USS1.senderApp[0].name = "flow3_USS1_to_CU"
**.USS1.senderApp[0].period = 0.1s
**.USS1.senderApp[0].tdmaOffset = 0.00008s
**.USS1.senderApp[0].payloadSize = 188B
**.USS1.senderApp[0].burstSize = 1
**.USS1.senderApp[0].destAddr = "00:00:00:00:00:07"  # CU
**.USS1.senderApp[0].srcAddr = "00:00:00:00:00:02"   # USS1

**.USS2.numSenders = 1
**.USS2.senderApp[0].name = "flow3_USS2_to_CU"
**.USS2.senderApp[0].period = 0.1s
**.USS2.senderApp[0].tdmaOffset = 0.00009s
**.USS2.senderApp[0].payloadSize = 188B
**.USS2.senderApp[0].burstSize = 1
**.USS2.senderApp[0].destAddr = "00:00:00:00:00:07"  # CU
**.USS2.senderApp[0].srcAddr = "00:00:00:00:00:09"   # USS2

**.USS3.numSenders = 1
**.USS3.senderApp[0].name = "flow3_USS3_to_CU"
**.USS3.senderApp[0].period = 0.1s
**.USS3.senderApp[0].tdmaOffset = 0.0001s
**.USS3.senderApp[0].payloadSize = 188B
**.USS3.senderApp[0].burstSize = 1
**.USS3.senderApp[0].destAddr = "00:00:00:00:00:07"  # CU
**.USS3.senderApp[0].srcAddr = "00:00:00:00:00:10"   # USS3

**.USS4.numSenders = 1
**.USS4.senderApp[0].name = "flow3_USS4_to_CU"
**.USS4.senderApp[0].period = 0.1s
**.USS4.senderApp[0].tdmaOffset = 0.00011s
**.USS4.senderApp[0].payloadSize = 188B
**.USS4.senderApp[0].burstSize = 1
**.USS4.senderApp[0].destAddr = "00:00:00:00:00:07"  # CU
**.USS4.senderApp[0].srcAddr = "00:00:00:00:00:0C"   # USS4

# CU riceve da USS1-4
**.CU.receiverApp[2].name = "flow3_USS1_to_CU"
**.CU.receiverApp[3].name = "flow3_USS2_to_CU"
**.CU.receiverApp[4].name = "flow3_USS3_to_CU"
**.CU.receiverApp[5].name = "flow3_USS4_to_CU"

# ============================================================================
# FLOW 4: CU → HU (Display dati controllo, cross-domain)
# Periodo: 10ms, Payload: 10500B
# Frammentazione: 10500B / 1500B = 7 frammenti
# ============================================================================
**.CU.numSenders = 1
**.CU.senderApp[0].name = "flow4_CU_to_HU"
**.CU.senderApp[0].period = 0.01s
**.CU.senderApp[0].tdmaOffset = 0.00012s
**.CU.senderApp[0].payloadSize = 1500B
**.CU.senderApp[0].burstSize = 7  # 7 frammenti da 1500B
**.CU.senderApp[0].destAddr = "00:00:00:00:00:06"  # HU
**.CU.senderApp[0].srcAddr = "00:00:00:00:00:07"   # CU

# HU riceve da CU
**.HU.receiverApp[0].name = "flow4_CU_to_HU"

# ============================================================================
# FLOW 5: FC → HU (Camera frontale, 60 FPS video RAW critico)
# Periodo: 16.66ms, Payload: 178500B
# Frammentazione: 178500B / 1500B = 119 frammenti
# ============================================================================
**.FC.numSenders = 1
**.FC.senderApp[0].name = "flow5_FC_to_HU"
**.FC.senderApp[0].period = 0.01666s
**.FC.senderApp[0].tdmaOffset = 0.0002s
**.FC.senderApp[0].payloadSize = 1500B
**.FC.senderApp[0].burstSize = 119  # 119 frammenti da 1500B
**.FC.senderApp[0].destAddr = "00:00:00:00:00:06"  # HU
**.FC.senderApp[0].srcAddr = "00:00:00:00:00:04"   # FC

# HU riceve da FC
**.HU.receiverApp[1].name = "flow5_FC_to_HU"

# ============================================================================
# FLOW 6: ME → RSE (Rear Seat Entertainment, streaming video 30 FPS)
# Periodo: 33.33ms, Payload: 178500B
# Frammentazione: 178500B / 1500B = 119 frammenti
# Nota: ME già ha 4 senders per flow 2, questo è il 5° (indice 4)
# ============================================================================
**.ME.numSenders = 5  # Aggiornato da 4 a 5
**.ME.senderApp[4].name = "flow6_ME_to_RSE"
**.ME.senderApp[4].period = 0.03333s
**.ME.senderApp[4].tdmaOffset = 0.002s
**.ME.senderApp[4].payloadSize = 1500B
**.ME.senderApp[4].burstSize = 119  # 119 frammenti da 1500B
**.ME.senderApp[4].destAddr = "00:00:00:00:00:0E"  # RSE
**.ME.senderApp[4].srcAddr = "00:00:00:00:00:0B"   # ME

# RSE riceve da ME
**.RSE.numReceivers = 1
**.RSE.receiverApp[0].name = "flow6_ME_to_RSE"

# ============================================================================
# FLOW 7: TLM → HU, CU (Telematica GPS/LTE, cross-domain)
# Periodo: 625us, Payload: 600B
# MULTICAST: 2 destinazioni
# ============================================================================
**.TLM.numSenders = 2

# TLM → HU
**.TLM.senderApp[0].name = "flow7_TLM_to_HU"
**.TLM.senderApp[0].period = 0.000625s
**.TLM.senderApp[0].tdmaOffset = 0.003s
**.TLM.senderApp[0].payloadSize = 600B
**.TLM.senderApp[0].burstSize = 1
**.TLM.senderApp[0].destAddr = "00:00:00:00:00:06"  # HU
**.TLM.senderApp[0].srcAddr = "00:00:00:00:00:01"   # TLM

# TLM → CU
**.TLM.senderApp[1].name = "flow7_TLM_to_CU"
**.TLM.senderApp[1].period = 0.000625s
**.TLM.senderApp[1].tdmaOffset = 0.00301s
**.TLM.senderApp[1].payloadSize = 600B
**.TLM.senderApp[1].burstSize = 1
**.TLM.senderApp[1].destAddr = "00:00:00:00:00:07"  # CU
**.TLM.senderApp[1].srcAddr = "00:00:00:00:00:01"   # TLM

# HU e CU ricevono da TLM
**.HU.receiverApp[2].name = "flow7_TLM_to_HU"
**.CU.receiverApp[6].name = "flow7_TLM_to_CU"

# ============================================================================
# FLOW 8: RC → HU (Rear Camera retrocamera, 30 FPS critico parcheggio)
# Periodo: 33.33ms, Payload: 178000B
# Frammentazione: 178000B / 1500B = 119 frammenti (arrotondato)
# ============================================================================
**.RC.numSenders = 1
**.RC.senderApp[0].name = "flow8_RC_to_HU"
**.RC.senderApp[0].period = 0.03333s
**.RC.senderApp[0].tdmaOffset = 0.004s
**.RC.senderApp[0].payloadSize = 1500B
**.RC.senderApp[0].burstSize = 119  # 119 frammenti da 1500B
**.RC.senderApp[0].destAddr = "00:00:00:00:00:06"  # HU
**.RC.senderApp[0].srcAddr = "00:00:00:00:00:0F"   # RC

# HU riceve da RC
**.HU.receiverApp[3].name = "flow8_RC_to_HU"

# ============================================================================
# CONFIGURAZIONE FINALE RECEIVERS (RIEPILOGO)
# ============================================================================
# CU: 7 receivers (LD1, LD2, USS1-4, TLM)
**.CU.numReceivers = 7

# HU: 4 receivers (CU, FC, TLM, RC)
**.HU.numReceivers = 4

# ============================================================================
# NOTE IMPORTANTI:
# 
# 1. TDMA OFFSETS: Gli offset sono stati assegnati sequenzialmente per 
#    evitare collisioni. In produzione andrebbero calcolati con precisione
#    basandosi su:
#    - Tempo di trasmissione = (payload + overhead) * 8 / datarate
#    - Overhead Ethernet = 38 byte (26 header + 12 IFG/CRC)
#    - @ 1Gbps: ~12.3us per frame da 1500B
#
# 2. FRAMMENTAZIONE: Flow 4, 5, 6, 8 usano burstSize > 1 per simulare
#    la frammentazione MTU 1500B. Ogni frammento viene inviato 
#    sequenzialmente nello stesso periodo.
#
# 3. MULTICAST: Flow 2 (ME→4 speaker) e Flow 7 (TLM→HU,CU) sono 
#    implementati con applicazioni sender multiple, una per destinazione.
#
# 4. PRIORITÀ: Per ottimizzare, considerare di schedulare prima i flussi
#    critici ADAS (flow 1, 3, 5, 8) poi cross-domain (4, 7) e infine
#    infotainment (2, 6).
#
# 5. TESTING: Iniziare attivando un flusso alla volta per validazione:
#    - Prima flow 1 (semplice unicast)
#    - Poi flow 2 (multicast)
#    - Poi flow 4 (frammentazione)
#    - Infine tutti insieme
# ============================================================================